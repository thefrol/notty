// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9RbbW8bxxH+K9dLgzYIRUq20qACiqKJk0BtWrRwjX6wjeBEniQGIo+9W6UxDAEi6cQ2",
	"5FiFkSJGUTtvBfr1SPGiEyWe/sLsPypmZu99KVFuTSvfKPJuX2aeeeaZ2dVds+60Ok7bbgvPXLlrevVN",
	"u2XRx3e3PeG0bBc/N2yv7jY7oum0zRUT/gnHEEIAE9mrGDCGSPYgkrsQwYnsGzCQfRhBIHsGnMpdCOVn",
	"EMEIQtmTjwy5C77syq7cg2MYg1814CmcQMDPT3AMCOSuIXsQwDEE8h5EMAG/YkAIJ3LfgAhO8Qnw1ay+",
	"ASE/flAx4BQizZICOIDIkF04gQh+iOfy4Uj28OXimsyK2XGdju2Kpk3GaDY0ZvDhiLb1ACYQwhiHjyCC",
	"gXyItoFQ7lcM8GECB2SvI9mFMdqNLTSGodxTSw/lLgRVA74mQ0U0Lq7xxo3Va2bFtD+1Wp0t21wxm59Y",
	"7QVhe8L5xKyY4k4Hv/SE22xvmDsVs2217HihIl0oG07eJ4tGMIQAd5kbGJ7CENdqwHcQyC5aD4a6KdAq",
	"lnB0sCg4pmLgOOSD4mwt4enG7mw6bVsz8HRUGDA08LPchROaNzDefHtpaenKlStXry4v5yZ98+1fLv2C",
	"frt6VTe7sDbKc5+DK4bTBH9LUS974MtdOMA/yLVocl+DftnPW8Xx6s7fFtZsT5TXt1MxXfuv203Xbpgr",
	"NxGQsb145RnPKBzcTsZw1j626wL3+J7rsuvy8K47DbJ7upblxWWdjdA4+Qf/4Ahj3dluN85dMk2ihtCt",
	"7fe251kbtmZ1iok+4igsLWrK1wmaSr94dlvgD+uO27KEuWI2LGEviGbL1u3ZE5bY9vQDba8lYJm2OmF/",
	"KjQ/6PyZ3Wh5cDVU6na1MJ0tr2fe1QTUMwgUGWKAIqlSLCEjHjIPIE9VDPkFwh3juC8fIsyJGUqEGeZJ",
	"fIhsxlw9AV/eBx+OicBHxRhSpFxgzfzwFDiyy6Mp7hzJPqWeMDcZ8kwEE5owpt9TXDMyhmbiHueC4rjT",
	"pi8vtGrAP4jjHiEJhXAsH6E9mSyYOcCHE1pngRxlP5s55R46ZBd8GNBXvnxMhixyG2+HSDWAIW0Xd7L6",
	"4erv3isnrThYC85/DqcQym7s5ZIzK5y22dcReu04zh44mSJessYhjMAnwBzTGI9UPhtV88nlm3x+NWBM",
	"OyBNgOzIQPkMx5H7MCReLAWS3dYl4Zn9z1jmLaiX2I8zwA1xbVZm5ItZtMJFhcG/UtkykHuEuJI28Ox2",
	"Y0E4lD8W6ltN0nRnZPCP1ptbQqfvyljWoTcLV17ZGHwYMxgRu9f/9GFufa9PTfkXWUmiBWRfoxFlFwI4",
	"QgTIrnIgQv0UIhwGDmUfl4runcL0rjgbY2VCmxuuhLUxb5cpRaL1XJzXCrb6DsUlUoeO2JHR8mwT5Ini",
	"S3oB+fAIrYslxqOfGPCEaZTF8YCMPMmRCO958fXZdBP7mRmlHA8FUOYMr+SL2n0585K4qG+7TXHnOpZS",
	"TMTv2JZru7/ZFpv41xr99X7s89/+5c+4JHraXFG/pvvYFKJj7uDAzfa6o6Nz2SO+Rh5GS8g+CfwRxclx",
	"mlO7uRwFvvycargjXbYyDE2ZBSdVg5QDpwc4lX0iLgUlylFVA76i5IDpggGGkTmWfXaa7GVUBMZMzP9R",
	"ZhfHcp8YjnF8gosmnkRu75dghTsY8mMTTN+yX73VvtWG/9DqAzg0yB6DBfAx8RmMoWSix0wHuNKkqFX0",
	"WxY533PE/MBFWumJbD1ARI5yioX/FA5R0qCQt1hX4HpKpWmB4XwYoylhqOiPEnaIe85sJ7FwFgCyn2wd",
	"fV8x5H1+G7lyxCU7+mEWMYPfsxqLCmDE0rPssYA99C2NgQ92jZv0EopPpPae3CNVEcTOOQTfWFrkzY9v",
	"/xyDwlup1TaaYstaq9adVk1s2uuus1VrO0LceY2yZFx9BgvawWklCzBAjCwwkuV9sqVywwK57JR0Tqh2",
	"Gsr9N2jxVKozHE4VjE8MwhWulXTRBCZyT36GoQcjVDXsfkTqmAVWagA0IUHsORIastuIfvyBzagQHJI7",
	"cRP3CAVdzEHoSwwlCmVVbeIj+0ov4JKwVg1LUcbVqkbWcgDRpgYYDENcalwNEC8f4wdklwOMdFIl/F2k",
	"1jDIVr37ClZpxCMQjZvq2wGZdqwyetx9INuhNWM5il+e7/vaQm1ty1mrtaxmuyZsT9Q6rtOo4mu/du31",
	"j5BXf7VpWw2PHHmTcs4YnaOihZgRl0zRVwIAHJ2/BobIE7LaTSKLU9rIKIYWuwJ1zH2adc9A4pK9WaCt",
	"Ge6NW23MGE3BWfQZBXuP8JQNMiz5ZHdBlyHgyKyYn9iux1llqbqkpGLb6jTNFfNqdbG6iKnREpuU02r1",
	"TH+w43g6LfBtUiKoXJBSkl814O+F/pmGPTlUEUSomHP9lgkOSnb+LqsCC6+mFKJpFFGX6Ory8ltvVWKA",
	"JlFH8ybJIeRMNsJgiAMupNDmZAqTKnXO4EDHj0bsrXTAYRyrIRxSPKA8JW1bWCa6kOJB5faCWQxeBgq6",
	"cczhHLMZVsp1qVScpt1PbtKyAU4gkg/jP0ImRZUBHlDGohzMpSsc4JYySpabCpmqUNvyqhJWWXQ1nfZq",
	"w1wx33VtS9jvUs1ismCzPfGO07jD3am2UB0bq9PZatbpxdrHHvc2uGeNn37q2uvmivlaLW1q11RHu5a0",
	"s3d2WBN6HaftsT67srj0UuapFAKCt9nAyFpeXPy/TclNPc188GWchZCiVR2fekgxUS4sVXXCjPuAJIiq",
	"70MCMFLjY9zAW3PZwHP5AEIYKBgSTvMb4MjMbIA1+HarZbl3kooi1iMYL/mnSd171J6MHXcbR0jorXZ3",
	"tbHD3LZlC113+ntaS8yjQcmgpGIL9T91OPIxcI3GT2KgY7lWyxa2i4u7azZxKiTfuLu7Yq42zGxtI9xt",
	"u5IxeLEOul0C/cUcWByv5Kyi5WO7zG73irlh6/LI1+TxIRXxStVwRd9HwaYZfmajf2CLaRYvrOGpKkd7",
	"EJKMHqfknp8a8akkjFLAh9zsybR6UNioVo9BIXUPx0k7Pvki/E62pWNWLgEWXpQAM24LFDEd5ezH1Lj8",
	"8pmlCNYnDDFKVg+1gmUaZKdon+cwoHw+nAGgJVje6DSsl84F886xc4JYanim5OiVplvSd9wQDP63hDuX",
	"sNCtTZ3+cF025A7qj0kBPE08cJFMlBng60KukX06NiraRT6mEvqAD7lyC6qYtRafbiZyQp/pUn5UFDTK",
	"Qqp8WKbhjg9sEZ+kXkIVcRYI4mVrYPA+nTDPKwrSM+2ds5FADZl7sq/iN2137lI9hDQUaNpfGcwpWCjR",
	"6W2vnVFOxz1BjspCf7F0wKRObuNQoUoVS88bN1avUdn870wzcE9bohYKZjomqMSHBnxcQGVvZHAUUJU+",
	"UQ2bkI9p+BZILIbU+WVGj+dOLm6Z6tyq+votM25nnqaXYuh4ttCpTd9BlYSvpd/w+cUt06D2zYjbjk+U",
	"eoTAuGZ79WTnaasgOveENFtoE3/jGINsWX5I3cSAjy34dJ14Y0Ktj2clI33B4jF3ZJTeiRrKPRwpRyvU",
	"c/XjNxUCqe++S53wx/jdPsEwlJ/HbfHM7qmpy2c1lJ74hGxf22UgDFRUowH84iF9ws7JqfEk1w2I0Te1",
	"9s9dWHg56iQ3xUvuAhTneuWdgK/SNio7O+nSx50njNM43pNLSzC5VJm+yMdJg3Ha5aqYZrN3aVKunb22",
	"D6dNoKvhC1h+BTlY2J+KWmfLal60hs81MyJ9wk0HFxcd/RnftuFcFfA9kpRRFNOfxo1HPfRefG86gPVz",
	"zZvw7B7G7AA7q5ORk5KFES/SuHj1MHt5/HhJ9d4Zyp8S7kUAMmPf4FzO4V7BXMDwKnLy/DCXOa6aa9fg",
	"hVNzWWwX6sUfWyu/GH4zxMIMCb7mCYv/u0HPybrWHxcp1I6luyopNyvRTPFfvgJCx3VUBaLrxnQgnj1z",
	"57xqxCdsaSs0+lkpsLN4vU5buIQkbzUaTfzJ2vpj7u6pmqfZFvaG7dJ9scJNqbM4/5Ir4nOSxHTslO++",
	"TcPvTvJTCa/f0D3rLl/1K1zzqRp86yB/nSf9p5dMRdZTt3X7pXtXdGGSNVhUrDpxDjqdELbbtrauOXVP",
	"K5sPWeYZdA8Ey/sHtN1td0vdaTvrjkP6ryxpT26norvFrrnEzj7lS1ERNWL4Uk8Ua8/8Dfce9xT4/rG6",
	"86TO/FXXcFL2XGisvDFPK+TQobHE8xLHcAYo3+2Z56rj3tbO7Z3/BgAA//9uHDinaDYAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
