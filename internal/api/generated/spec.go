// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xc624b1xF+le2mQROEF9lWGkRAUTRxXLhNenOD/rCNYCWupI3JXWZ36Vg1BIikE9uQ",
	"YxVGihhp7SROgf6lKDFaUeLqFea8UTEzZ++HFCnbspHmn8TLucx88811eVNfchpNxzZt39MXbure0qrZ",
	"MOjPd1ue7zRMF/+umd6SazV9y7H1BR2+hgMIYAAj0SlpMIRQdCAUGxDCoehqsC26sAsD0dHgSGxAID6D",
	"EHYhEB1xTxMb0BNt0RabcABD6FU0eAiHMODPj3ANGIgNTXRgAAcwELcghBH0ShoEcCi2NAjhCD8BPblr",
	"T4OAP75T0uAIQsWRBrADoSbacAgh/BDt1YN90cEv58+kl/Sm6zRN17dMEoZVU4ihB/t0rTswggCGuHwI",
	"IWyLuygbCMRWSYMejGCH5LUv2jBEubGEhtAXm/LogdiAQUWDb0hQIa2LZ/zww4vn9ZJu3jAazbqpL+jW",
	"dcMu+6bnO9f1ku6vNfFFz3cte0VfL+m20TCjg/rJQVlw4jZJNIQ+DPCWmYXhIfTxrBo8gYFoo/Sgr9oC",
	"pWL4jgoWOcWUNFyHdJDfreF7qrWbq45tKhYejwoN+hr+LTbgkPYdaG+8debMmbNnz547Nz+f2fSNt94+",
	"80t679w51e6+sVLc+xhcMZxG+F6CetGBntiAHfyHVIsi7ynQL7pZqTjekvNpedH0/OL51ku6a37Sslyz",
	"pi9cRkBG8uKTpzQjcXA1XsNZ/Nhc8vGO77kuqy4L7yWnRnJPzjI/N6+SEQon+8E/OL627LTs2rFHpk3k",
	"EqqzfWB6nrFiKk4nmegjtsLCoca8HKOp8I5n2j6+sey4DcPXF/Sa4Ztl32qYqjt7vuG3PPVCrcUYLONO",
	"55s3fMUbKn2mL1pcXC6VqF0eTCXLS77BhG7UahYuYNT/lJGp/IZl++aK6dI5C2uk9lcY5SMYSEJFI0di",
	"JntEVt1jLkGuK2niCzQZ5IKuuIumQuxSIN0g6wj6yIjM9yPoidvQgwNyArt5O5TEnmPe7PJkfKLNq0n+",
	"3RVdcl9BZjPkqhBGtGFE4Ud4ZmQdxcYd9if5dcdtXzxoRYN/Ek/eQyIL4EDcQ3ky4TD7QA8O6Zw5ghXd",
	"tPcVm6iQDejBNr3UE/dJkHl+5OsQMQ+gT9fFm1x8/+Lv3ys6vsjgc8p/DEcQiHak5YIyS+z6Wdchau0g",
	"8kC4mSRvksYe7EKPAHNAa9yTPnG3knVQ32Z9tAZDugHFFciwDJTPcB2xBX3i1oIxmrbKkU+tf8YyX0F+",
	"ifU4BdwQ13ppSs6ZJt6YNbj4dxL6bItNQlwhvvBMu1b2HfJB5aW6RXHhhCjgo2Wr7qtixCKWVehNw5VP",
	"NoQeDBmMiN1Lf34/c75Xx4YNs5wkjidEVxFnijYMYB8RINpSgQj1IwhxGdgTXTwqqneMt3D9yRgrEtqp",
	"4co3Vk5bZTKqUWou8o05WT3BABWpQ0XsyGhZthlkieJL+gLy4T5KF9OUez/T4AHTKAfY2yTkUYZE+M5z",
	"r04Xe7GemVGK9pADZUbwMgSSty96bwpQllqu5a9dwnSMifgd03BN9zctfxX/W6T/LkQ6/93f/opHok/r",
	"C/Ld5B6rvt/U13Fhy152VHQuOsTXyMMoCdGlJGGX7OQg8antjI+Cnvic8sB9lbfSNEWqBocVjSIHdg9w",
	"JLpEXBJK5KMqGnxFzgHdBQMMLXMouqw00UlFEWgzEf+HqVsciC1iOMbxIR6aeBK5vVuAFd6gzx8bofsW",
	"3coV+4oN/6XTD2BPI3lsl6GHjk9jDMUb3Wc6wJPGibGk32KQ8z1bzA+c6BU+kc4piMgxnOLkYQyHyNAg",
	"57c4rsDzFNLbHMP1YIiihL6kP3LYAd45dZ1YwmkAiG58ddR9SRO3+dvIlbuc9qMepglm8HWOxsIcGDF9",
	"LWpswBr6jtbAD7a1y/QlDD6R2jtik6KKQaScPehpZ+b48sOrr6FReAvV6orl143FypLTqPqr5rLr1Ku2",
	"4/trr5CXjDLYQVm5OJ2kDNuIkTIjWdwmWUo1lEllRxTnBPKmgdh6nQ5P6T7D4UjC+FAjXOFZKS4awUhs",
	"is/Q9GAXoxpWPyJ1yAFWIgAUIUHsMRIastsuvfkDi1EiOCB14iVuEQra6INQl2hKZMoyY8WPbMl4AY+E",
	"+W5QsDLOeBVhLRsQXWobjaGPR42yAeLlA/wD2WUHLZ2iEn4tlGfYTmfOWxJWicUjELXL8tVtEu1QevSo",
	"gkGyQ2lG4Si+eLzuq+XqYt1ZrDYMy676pudXm65Tq+DXfu2ayx8hr/5q1TRqHinyMvmcISpHWgsxIx6Z",
	"rK8AANg//gwMkQcktctEFkd0kd0IWqwKjGNu066bGhKX6EwDbcVyr1+x0WNYPnvRR2TsHcJT2sgw5RPt",
	"sspDwL5e0q+brsde5UxlXoaKttG09AX9XGWuMoeu0fBXyadVl1I1xqbjqWKB7+IUQfqChJJ6FQ3+kavB",
	"KdiTTRVBhBFzpmYzwkVJzk/SUWDuqwmFKIpNVGk6Nz//5pulCKCx1dG+sXMI2JPtojFEBheQabMzhVGF",
	"qm+wo+JHLdJWsmA/stUA9sgeMDyl2DZ3TFQh2YP07TmxaHwMDOiGEYezzaZYKVPpknaaVFC50MsCOIRQ",
	"3I3+CZgUpQe4Qx6LfDCnrrCDV0pFslxUSGWFyrJZhbDKQZfl2Bdr+oL+rmsavvku5Sw6B2ym57/j1Na4",
	"wmX7supjNJt1a4m+WP3Y49qGDB8JlepS6MJN3Ws1Goa7lkrFMmJJRTSUdXXEPbQHo96iKhTXZscWWpO6",
	"qqyOyvKVnqtnUpVSl6lZ5QMKrilmhH8RDnqo6y5jRzqkreMPn4000sfGTFSvW383yr7TXFq1rkXlxYWJ",
	"O2YutGiadYtKVlNd6pJxbdWoWzaHrNySwKP83DWX9QX9lWrSs6jKhkU17lasr3O47jUd22OFnp07MwUE",
	"Zt+nNJ6rRsh883Nzs0JvhL4iin3YnjmPkTrLafKrxLHJlJD/u4NspsmiSkCsgf7oPpsh5S+xgrn2q1v2",
	"daNu1fhNrvrMvj4Dcdwlsql27iqPpvvS+INHVdHo7IoF0Upjn5dfeQawcRVdhYDH4g4EsM2UlxMPBAyK",
	"t2cFRcrnRWVUZo4+lyJyknyCPM6hXOabXSpUKhcoSjXyzJp5w/KIjyK5fp05jWbVtMaaLBWVz56bn7jP",
	"M5Hx11Near2kvzm7BT6QGSClmjASWxxoxWrNCZuKH8h4ZY5rKUWb9PWiqFv2Ndv51NZMunEsaO+TOr+k",
	"2abhaq9plq1d+MsfP6hUKs9Gjmgggcxo2pRU9/KHpW2Sy34ZZ73cy81GY8zjHrV6Ipa8iivEYV715sXa",
	"Osd4ddNXdfq+J9uM4slBbgeZzefqoFTpzcYC52n9OBZoGq7RMH3TxcPd1C3cCoPQxJVdrOnpGo/vtsy0",
	"gPP1oKsFDzM3k4fJr1dQTl7ykVyml3tJXzFV8fQ35KP6VMyU2R1XNruYuCqWn1rovzX9cRLPneGhLMth",
	"lHQLV0uC3OzWGArKGElWAva46J0qeWOCJ0veGnmhW7hOUvnOFiPX0qVtvfQSYOHE0UaiNqaazRzjs7eZ",
	"f2aHGcskebA+YIhR0H5XmbiNg+yYHPAxbFNe058CoAVYftisGc+dC2bJNZ5FQHtKEEsEz5QcTh/WPq13",
	"+jIqfqEX4PYheStujMTNgBwSMjHqAfV2izHqKZmF6mxPF6g80+hUZuxhTsUB1ynSxpoz74exFmbxRqkF",
	"vsn5mzFBnLhP5cQdbvhnDpSPKapeNO+gdnoqRqJteuQlKF+n2mE05pOU8btU/xrK5t+QypPpCijbhRbV",
	"OxJCDhVdhmLRQt6C5zVewkjlxPMjRfhdoCmhUyOQfO6qSAZFO66TxWNaUep+GgSRzmSYukbSjQ0oIZ1s",
	"NVPid3xY3uCBqzgqV9tOgmrpyXfTzKxAeaCKDKPhrpcQ4pN0Fx17MpxPASvJmN0xsKD+zi2CAkI66Z5S",
	"XkpUP1B001IokbCQIDmGWfPomIBKagApWnliCw4LkLnQqtcjUnxu2uUNlJW8/C1kmJni997p+e1USq7F",
	"DT/qDZyIJJR+KdI+6zul+2L2/rRIGOPoaaA2T11ZVJDC3lmLvCYRxeRUM98fyrfbX/oU8Okx+lL4sh+N",
	"qYwrh4wPg4sW5bUWvedtTfuqKSmlNaXnfH+yqJfHogoDr3mr+lG5oLF2pcCX0rJaixOmCKJRKE7Cc2NV",
	"hblaObAedfOoQd8WWzQuS9MC/0nNQG0qO/O5OQGajixFs5I8JUnd/lBjy6XhhJFMWQKeTuUHaKLapxzb",
	"TpXfMwObV+L26atX9GiK6yh5noim0nMDasl3Fk3Px68lr/DY5hVdo6mVXZ62eiDNAQbaedNbSrpp8YRE",
	"eOxgeHq+gBCNa2ynpxH2aIhqwNOa/FABlQhGNPHxqCCkL7hWnJmUTR4n64tNXCnDzjRq1ou+KSNlGjfc",
	"oPbPfXxti8LlQHweTQOmbk+9Qx5RpdySB4O3lMMVhIGSnK+gHkthIC87LD/KDEFE6Bs78pB5TuP5FCMz",
	"WzznDnt+rzwV8aVrJ2yw783a0c62+zJVyWmKjcV2n3kDj2j5Wt2wV1J91W+LQ5phdoCPgPRsen9PWRyZ",
	"tYWtmECdso2tNJfZWtnp56iK7eyi2DWrpi3WjaVr5WXXqhlr5abrNJzn39f+doZb/tTbnrnSnRor4ypV",
	"Lm6Jh3fGPagZRx1pgoqDj+l728G4DVQ97By5v4DimW/e8KvNumHN2sPONPNDddycLO7PuvqjQjScdrEy",
	"9DmKBhDVFnPyu6kA1s0MLwSTe/jTA2xSJz8TaOdWnKVx/+Jh9vwChpe0UDuh60UR6CwAmbJvfizncK/8",
	"VMDwIoLU08NcehT0NLvmJ47ritlnrtEzZWf9hTWyj3PvU9jCFA7+2TaaZRbZHVOwO3Hn+RfFUl/qSj/1",
	"mv8fe81TVRNP2nFWlJrHGdN6/NbN4hEHshi2UXj2sKLxo1DZZwyTX/NJ1Us68icEuoWHQekpbg4Iw3xN",
	"CPegUUHfdG2jft5Z8pQx/B7LTKOH0w7EPXGHrtty6/JB20kPXiW/0ZP04tdLqp/WUPyyBgOMn9QMKRXj",
	"Jw3DSJHZn93ocMWPfxRBPogpH0SS4zujouYCbeH105RCBh0KSTwuEB67o2IP+TRPHXXIFQdWtBBOVZ7c",
	"27i6/r8AAAD//+FE+JrZSwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
