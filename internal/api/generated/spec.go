// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.0.0 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"LnqwOfg3AAD//2t+ksVfHQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
